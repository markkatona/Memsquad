Memóriajáték projekt
Rendszerterv

----------------------------------------------------

----------------------------------------------------

A rendszer felépítése és mûködése:
	Az alkalmazás két fõ részbõl tevõdik össze, a játék menüjébõl és a játékból. A játék menüje magában fogalja a játékos adatainak bekéréshez szükséges objektumokat, valamit a játék elindításához szükséges gombot. A játékostól alapvetõen három adatot kér be a rendszer, ezek pedig a játékos neve, életkora és a neme. Ezen fölül a háttérben a "játék indítása" gomb megnyomásának pillanatában a dátum is elmentésre kerül késõbbi használat céljából. Természetesen ez utóbbi csak akkor történik meg, ha a bekért adatok megfeleltek a követelményeknek. Abban az esetben, ha bármelyik bekért adat nem felel meg a követelménynek, a "játék indítása" gomb nem von maga után játék indítást. Ha a játékos által beírt adatok a kritériumoknak eleget tesznek a "játék indítása" gomb a következõket vonja maga után: elsõ sorban megtörténik a bekért adatoknak az elmentése és a dátum elmentése, ez után pedig elindul a játék. Az adatokat a rendszer egy MySQL szerverre tölti fel tárolás és késõbbi elemzés céljából. A játék elindulása a következõket jelenti: megjelenik a 6x6 darab négyzet, két másodperc elteltével pedig "felvillan" (színt vált) egymás után sorrendben néhány négyzet. A felvillanó négyzeteket a rendszer véletlenszerû szám generálással választja ki. Egy ciklusban készít egy véletlenszerû számot, ez után ennek a véletlenszerû számnak megfelelõ id-jú négyzet felvillan. Ez a ciklus a játékos szintjének megfelelõen annál többször ismétlõdik, minél magasabb szintû a játékos. Kezdetben ez a szám három. Minden két tökéletesen teljesített pálya esetén ez a szám nõ eggyel. A pálya akkor minõsül tökéletesen teljesítettnek, ha a játékos ugyan olyan sorrendben, ugyan azokra a négyzetekre kattint rá, amilyen sorrendben és amelyik négyzetek felvillantak. Tehát a négyzetek felvillanása után a játékos következik. Minden kattintás után a rendszer visszajelez, hogy a játékos jó négyzetbe kattintott-e vagy sem. Ha a játékos jó négyzetbe kattintott ez a négyzet zöld színre vált egy pillanatra, ellenkezõ esetben pedig pirosra. A pálya nem ér véget akkor, ha a játékos rossz négyzetbe kattint. A játékos a szintjét játék közben a 6x6 darab négyzet fölött tekintheti meg. Miután a játékos végzett a játékkal és kilép az alkalmazásból lementésre kerül az elért játékszint, a találati ráta valamit a játékkal eltöltött idõ. Ezek az adatok a játékos személyes adataival összekapcsolva kerülnek lementésre.
----------------------------------------------------
A program tesztelésének tervezése:
	Mind a program készítõk mind pedig a megrendelõk egyik legnagyobb félelme, ha a megrendelt program tele van bug-okkal, ami nem csak a felhasználói élményt ronthatja el, hanem akár üzleti károkat is okozhat, valamint akár törvényi rendeleteket is megszeghet, ami bírósági pereket is vezethet maga után. Ezért maga a program tesztelése számos tényezõt kell figyelembe vegyen. 
	A program csak akkor léphet a következõ fázisba, ha minden teszteset sikeresen végbemegy, és a helyes eredményt adja vissza. A játékos elsõ lépésben meg kell adja az adatait ami segítségével a rendszer be tudja azonosítani, és ez által meg tudja különböztetni a többi felhasználótól. Ezeket az adatokat a rendszer egy adatbázisban menti le és ezért fontos, hogy az adatok helyesek legyenek. A rendszer nem engedheti meg például, hogy a felhasználó neve szám legyen, vagy akár ne írjon egyáltalán nevet. A felhasználó a saját életkorát csak számként tudja megadni valamint mikor a nemét tölti ki szintén csak szöveget használhat valamint mindegyiket meg kell adja. Annak érdekében, hogy ezek a hibák ne fordulhassanak elõ a programnak tesztek sorozatán kell keresztülmennie. Ezeket a teszteket a junit keretrendszer segítségével valósítjuk meg, mely lehetõvé teszi, hogy teszteket írjunk annak érdekében, hogy lefedjük az összes lehetséges esetet, ami elõfordulhat a program futása közben. 
	A junit 5 segítségével le kell tesztelnünk, hogy a program hogyan reagál például, ha helytelenül töltjük ki az alapadatainkat, vagy például ha rákattintunk az egyik négyzetre. A programnak reagálnia kell a lehetõ legtöbb esetre, és semmilyen esetben se szabad helytelenül leállnia, vagy hibás adatokat felvinnie az adatbázisba.

----------------------------------------------------

----------------------------------------------------

----------------------------------------------------